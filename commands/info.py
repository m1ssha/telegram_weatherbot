import re
import logging
from aiogram import types
from aiogram.filters import Command
from aiogram.types import Message
from weather_api import get_city_info

from messages import messages

def register_info(dp):
    @dp.message(Command("info"))
    async def city_info_handler(message: Message, command):
        if command.args:
            city = command.args.strip()

            if not re.match(r"^[a-zA-Z–∞-—è–ê-–Ø—ë–Å\s\-]+$", city):
                logging.warning(f"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞: {message.text}")
                await message.answer(messages.error_city_info, parse_mode="HTML")
                return

            info = get_city_info(city)
            if not info:
                await message.answer(messages.error_find_city, parse_mode="HTML")
                return

            city_id = info["id"]
            city_url_openweather = f"https://openweathermap.org/city/{city_id}"

            answer = (
                f"üèô <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ–¥–µ:</b> {info['city']}, {info['country']}\n\n"
                f"üë• <b>–ù–∞—Å–µ–ª–µ–Ω–∏–µ:</b> {info['population']} —á–µ–ª–æ–≤–µ–∫\n"
                f"üåÖ <b>–†–∞—Å—Å–≤–µ—Ç:</b> {info['sunrise']}\n"
                f"üåá <b>–ó–∞–∫–∞—Ç:</b> {info['sunset']}\n\n"
                f"üîó <a href='{city_url_openweather}'>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ OpenWeatherMap</a>"
            )
            await message.answer(answer, parse_mode="HTML", disable_web_page_preview=True)
        else:
            await message.answer(
                "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥. –ü—Ä–∏–º–µ—Ä: <code>/info –ú–æ—Å–∫–≤–∞</code>",
                parse_mode="HTML"
            )