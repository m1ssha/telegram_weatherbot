import re
import logging
from aiogram import types
from aiogram.filters import Command
from aiogram.types import Message
from weather_api import get_weather

def escape_html(text):
    return text.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;")

def register_weather(dp):
    @dp.message(Command("weather"))
    async def weather_handler(message: Message, command):
        if command.args:
            city = command.args.strip()

            if not re.match(r"^[a-zA-Z–∞-—è–ê-–Ø—ë–Å\s\-]+$", city):
                logging.warning(f"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞: {message.text}")
                await message.answer(
                    "üö´ –û—à–∏–±–∫–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –ø—Ä–æ–±–µ–ª—ã. –ü—Ä–∏–º–µ—Ä: <code>/weather –ú–æ—Å–∫–≤–∞</code>",
                    parse_mode="HTML"
                )
                return

            weather = get_weather(city)

            if not weather or "city_id" not in weather:
                logging.error(f"–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: {city}")
                await message.answer(
                    "‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                    parse_mode="HTML"
                )
                return

            city_url_openweather = f"https://openweathermap.org/city/{weather['city_id']}"

            answer = (
                f"üèô <b>–ì–æ—Ä–æ–¥:</b> {escape_html(weather['city'])}\n"
                f"üå° <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {weather['temp']}¬∞C\n"
                f"ü•∂ <b>–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫:</b> {weather['feels_like']}¬∞C\n"
                f"üí® <b>–í–µ—Ç–µ—Ä:</b> {escape_html(weather['windspeed'])}\n"
                f"üå´ <b>–î–∞–≤–ª–µ–Ω–∏–µ:</b> {weather['pressure']} –º–º —Ä—Ç. —Å—Ç.\n"
                f"üíß <b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {weather['humidity']}%\n"
                f"üå¶ <b>–ü–æ–≥–æ–¥–∞:</b> {escape_html(weather['description'].capitalize())}\n\n"
                f"üîó <a href='{city_url_openweather}'>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ OpenWeatherMap</a>"
            )

            logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è {city}")
            await message.answer(answer, parse_mode="HTML", disable_web_page_preview=True)

        else:
            logging.warning(
                f"–ö–æ–º–∞–Ω–¥–∞ /weather –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.full_name}"
            )
            await message.answer(
                "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥. –ü—Ä–∏–º–µ—Ä: <code>/weather –ú–æ—Å–∫–≤–∞</code>",
                parse_mode="HTML"
            )
